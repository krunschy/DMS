version: '3.8'

services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile.api
    container_name: dms-app
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - rabbitmq
      - minio
      - elasticsearch
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/dmsdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_RABBITMQ_HOST: rabbitmq
    networks:
      - dms-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dms-frontend
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - dms-network

  postgres:
    image: postgres:15
    container_name: dms-db
    restart: always
    environment:
      POSTGRES_DB: dmsdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dms-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: dms-mq
    ports:
      - "5672:5672"
      - "9093:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "password"
    networks:
      - dms-network

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9090:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    networks:
      - dms-network

  ocr-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.ocr
    container_name: dms-ocr-worker
    depends_on:
      - rabbitmq
      - minio
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      SPRING_PROFILES_ACTIVE: ocr
    networks:
      - dms-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.28
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=yourpassword
      - ELASTICSEARCH_USERNAME=elastic
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - dms-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.28
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=yourpassword
    ports:
      - "5601:5601"
    networks:
      - dms-network
    depends_on:
      - elasticsearch

  adminer:
    image: adminer:latest
    container_name: dms-adminer
    restart: always
    ports:
      - "9091:8080"
    networks:
      - dms-network


networks:
  dms-network:
    driver: bridge

volumes:
  minio_data:
    name: minio_data
    driver: local
  postgres_data:
    name: postgres_data
    driver: local
  elasticsearch_data:
    driver: local